repo_root = repo_volume()

# Load resources from namespace
resources = namespace_resources()

# Adapt recommendations service
recommendations = resources.deployments["recommendations"]
recommendations.mount(repo_root.subpath("src/recommendationservice"), "/recommendationservice")

# Adapt shipping service
shipping = resources.deployments["shipping"]
shipping.mount(repo_root.subpath("src/shippingservice"), "/src")

# Adapt frontend service
frontend = resources.deployments["frontend"]
frontend.mount(repo_root.subpath("src/frontend"), "/src")
frontend.map_port(local=8888, remote=8080)

# Adapt ads service
ads = resources.deployments["ads"]
ads.mount(repo_root.subpath("src/adservice"), "/app")
ads.mount(volume("ads-build"), "/app/build", init_on_rebuild=True)

# Adapt cart service
cart = resources.deployments["cart"]
builder = k8s.Container(
    name="builder",
    image="mcr.microsoft.com/dotnet/sdk:7.0.201",
    working_dir="/code"
)
cart.spec.template.spec.containers.append(builder)
cart_out = volume("cart-out")
cart.mount(repo_root.subpath("src/cartservice/src"), "/code", container="builder")
cart.mount(repo_root.subpath("src/cartservice/src"), "/code")
cart.mount(cart_out, "/app", init_on_rebuild=True)
cart.mount(cart_out, "/tmp/out", no_copy=True, container="builder")
cart.add_raftt_cli(container="builder")

# Adapt checkout service
checkout = resources.deployments["checkout"]
checkout.mount(repo_root.subpath("src/checkoutservice"), "/src")

# Adapt currency service
currency = resources.deployments["currency"]
currency.mount(repo_root.subpath("src/currencyservice"), "/usr/src/app")
currency.mount(volume("currency-node-modules"), "/usr/src/app/node_modules", init_on_rebuild=True)

# Adapt payments service
payments = resources.deployments["payments"]
payments.mount(repo_root.subpath("src/paymentservice"), "/usr/src/app")
payments.mount(volume("payments-node-modules"), "/usr/src/app/node_modules", init_on_rebuild=True)

# Adapt productcatalog service
productcatalog = resources.deployments["productcatalog"]
productcatalog.mount(repo_root.subpath("src/productcatalogservice"), "/src")

# Deploy resources
deploy(resources)
